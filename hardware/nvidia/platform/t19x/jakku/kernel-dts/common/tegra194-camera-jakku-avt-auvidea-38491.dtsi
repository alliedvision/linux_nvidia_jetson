/*
 * Copyright (c) 2018-2020, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include <dt-bindings/media/camera.h>

/ {
	host1x {
		vi@15c10000  {
			num-channels = <4>;
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				vi_port0: port@0 {
					reg = <0>;
					avt_csi2_vi_in0: endpoint {
						port-index = <0>;
						bus-width = <4>;
						remote-endpoint = <&avt_csi2_csi_out0>;
					};
				};
				vi_port1: port@1 {
					reg = <1>;
					avt_csi2_vi_in1: endpoint {
						port-index = <4>;
						bus-width = <4>;
						remote-endpoint = <&avt_csi2_csi_out1>;
					};
				};
				vi_port2: port@2 {
					reg = <2>;
					avt_csi2_vi_in2: endpoint {
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out2>;
					};
				};
				vi_port3: port@3 {
					reg = <3>;
					avt_csi2_vi_in3: endpoint {
						port-index = <3>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out3>;
					};
				};
			};
		};

		nvcsi@15a00000 {
			num-channels = <4>;
			#address-cells = <1>;
			#size-cells = <0>;
			csi_chan0: channel@0 {
				reg = <0>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					csi_chan0_port0: port@0 {
						reg = <0>;
						avt_csi2_csi_in0: endpoint@0 {
							port-index = <0>;
							bus-width = <4>;
							remote-endpoint = <&avt_csi2_out0>;
						};
					};
					csi_chan0_port1: port@1 {
						reg = <1>;
						avt_csi2_csi_out0: endpoint@1 {
							remote-endpoint = <&avt_csi2_vi_in0>;
						};
					};
				};
			};
			csi_chan1: channel@1 {
				reg = <1>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					csi_chan1_port0: port@0 {
						reg = <0>;
						avt_csi2_csi_in1: endpoint@0 {
							port-index = <4>;
							bus-width = <4>;
							remote-endpoint = <&avt_csi2_out1>;
						};
					};
					csi_chan1_port1: port@1 {
						reg = <1>;
						avt_csi2_csi_out1: endpoint@1 {
							remote-endpoint = <&avt_csi2_vi_in1>;
						};
					};
				};
			};
			csi_chan2: channel@2 {
				reg = <2>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					csi_chan2_port0: port@0 {
						reg = <0>;
						avt_csi2_csi_in2: endpoint@0 {
							port-index = <2>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out2>;
						};
					};
					csi_chan2_port1: port@1 {
						reg = <1>;
						avt_csi2_csi_out2: endpoint@1 {
							remote-endpoint = <&avt_csi2_vi_in2>;
						};
					};
				};
			};
			csi_chan3: channel@3 {
				reg = <3>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					csi_chan3_port0: port@0 {
						reg = <0>;
						avt_csi2_csi_in3: endpoint@0 {
							port-index = <3>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out3>;
						};
					};
					csi_chan3_port1: port@1 {
						reg = <1>;
						avt_csi2_csi_out3: endpoint@1 {
							remote-endpoint = <&avt_csi2_vi_in3>;
						};
					};
				};
			};
		};
	};

  i2c@c240000 {
    avt_csi2@4c {
      compatible = "alliedvision,avt_csi2";
      /* I2C device address */
      reg = <0x4c>;

      status = "okay";

      /* Camera -> Serializer MIPI config */
      csi_clk_freq = <400000000>;
      csi_lanes = <4>;

      /* V4L2 device node location */
      devnode = "video0";

      mode0 {
        num_lanes = "4";
        tegra_sinterface = "serial_a";
        discontinuous_clk = "no";
        cil_settletime = "0";
        embedded_metadata_height = "0";

        /* not verified: */
        mclk_khz = "24000";
        phy_mode = "DPHY";
        dpcm_enable = "false";

        active_w = "5488";
        active_h = "4112";
        pixel_t = "bayer_bggr";
        readout_orientation = "0";
        line_length = "5488";
        inherent_gain = "1";
        mclk_multiplier = "31.25";
        pix_clk_hz = "750000000";

        gain_factor = "16";
        framerate_factor = "1000000";
        exposure_factor = "1000000";
        min_gain_val = "16"; /* 1.0 */
        max_gain_val = "256"; /* 16.0 */
        step_gain_val = "1"; /* 0.125 */
        min_hdr_ratio = "1";
        max_hdr_ratio = "64";
        min_framerate = "1500000"; /* 1.5 */
        max_framerate = "30000000"; /* 30 */
        step_framerate = "1";
        min_exp_time = "34"; /* us */
        max_exp_time = "550385"; /* us */
        step_exp_time = "1";
      };

      ports {
        #address-cells = <1>;
        #size-cells = <0>;
        port@0 {
          reg = <0>;
          avt_csi2_out0: endpoint {
            port-index = <0>;
            bus-width = <4>;
            remote-endpoint = <&avt_csi2_csi_in0>;
          };
        };
      };
    };

    avt_csi2@4d {
      compatible = "alliedvision,avt_csi2";
      /* I2C device address */
      reg = <0x4d>;

      status = "okay";

      /* V4L2 device node location */
      devnode = "video3";

      /* Camera -> Serializer MIPI config */
      csi_clk_freq = <400000000>;
      csi_lanes = <2>;

      mode0 {
        num_lanes = "2";
        tegra_sinterface = "serial_g";
        discontinuous_clk = "no";
        cil_settletime = "0";
        embedded_metadata_height = "0";

        /* not verified: */
        mclk_khz = "24000";
        phy_mode = "DPHY";
        dpcm_enable = "false";

        active_w = "5488";
        active_h = "4112";
        pixel_t = "bayer_bggr";
        readout_orientation = "0";
        line_length = "5488";
        inherent_gain = "1";
        mclk_multiplier = "31.25";
        pix_clk_hz = "750000000";

        gain_factor = "16";
        framerate_factor = "1000000";
        exposure_factor = "1000000";
        min_gain_val = "16"; /* 1.0 */
        max_gain_val = "256"; /* 16.0 */
        step_gain_val = "1"; /* 0.125 */
        min_hdr_ratio = "1";
        max_hdr_ratio = "64";
        min_framerate = "1500000"; /* 1.5 */
        max_framerate = "30000000"; /* 30 */
        step_framerate = "1";
        min_exp_time = "34"; /* us */
        max_exp_time = "550385"; /* us */
        step_exp_time = "1";
      };

      ports {
        #address-cells = <1>;
        #size-cells = <0>;
        port@0 {
          reg = <0>;
          avt_csi2_out3: endpoint {
            port-index = <3>;
            bus-width = <2>;
            remote-endpoint = <&avt_csi2_csi_in3>;
          };
        };
      };
    };

    avt_csi2@4e {
      compatible = "alliedvision,avt_csi2";
      /* I2C device address */
      reg = <0x4e>;

      status = "okay";

      /* V4L2 device node location */
      devnode = "video2";

      /* Camera -> Serializer MIPI config */
      csi_clk_freq = <400000000>;
      csi_lanes = <2>;

      mode0 {
        num_lanes = "2";
        tegra_sinterface = "serial_e";
        discontinuous_clk = "no";
        cil_settletime = "0";
        embedded_metadata_height = "0";

        /* not verified: */
        mclk_khz = "24000";
        phy_mode = "DPHY";
        dpcm_enable = "false";

        active_w = "5488";
        active_h = "4112";
        pixel_t = "bayer_bggr";
        readout_orientation = "0";
        line_length = "5488";
        inherent_gain = "1";
        mclk_multiplier = "31.25";
        pix_clk_hz = "750000000";

        gain_factor = "16";
        framerate_factor = "1000000";
        exposure_factor = "1000000";
        min_gain_val = "16"; /* 1.0 */
        max_gain_val = "256"; /* 16.0 */
        step_gain_val = "1"; /* 0.125 */
        min_hdr_ratio = "1";
        max_hdr_ratio = "64";
        min_framerate = "1500000"; /* 1.5 */
        max_framerate = "30000000"; /* 30 */
        step_framerate = "1";
        min_exp_time = "34"; /* us */
        max_exp_time = "550385"; /* us */
        step_exp_time = "1";
      };

      ports {
        #address-cells = <1>;
        #size-cells = <0>;
        port@0 {
          reg = <0>;
          avt_csi2_out2: endpoint {
            port-index = <2>;
            bus-width = <2>;
            remote-endpoint = <&avt_csi2_csi_in2>;
          };
        };
      };
    };

    avt_csi2@4f {
      compatible = "alliedvision,avt_csi2";
      /* I2C device address */
      reg = <0x4f>;

      status = "okay";

      /* V4L2 device node location */
      devnode = "video1";

      /* Camera -> Serializer MIPI config */
      csi_clk_freq = <400000000>;
      csi_lanes = <4>;

      mode0 {
        num_lanes = "4";
        tegra_sinterface = "serial_c";
        discontinuous_clk = "no";
        cil_settletime = "0";
        embedded_metadata_height = "0";

        /* not verified: */
        mclk_khz = "24000";
        phy_mode = "DPHY";
        dpcm_enable = "false";

        active_w = "5488";
        active_h = "4112";
        pixel_t = "bayer_bggr";
        readout_orientation = "0";
        line_length = "5488";
        inherent_gain = "1";
        mclk_multiplier = "31.25";
        pix_clk_hz = "750000000";

        gain_factor = "16";
        framerate_factor = "1000000";
        exposure_factor = "1000000";
        min_gain_val = "16"; /* 1.0 */
        max_gain_val = "256"; /* 16.0 */
        step_gain_val = "1"; /* 0.125 */
        min_hdr_ratio = "1";
        max_hdr_ratio = "64";
        min_framerate = "1500000"; /* 1.5 */
        max_framerate = "30000000"; /* 30 */
        step_framerate = "1";
        min_exp_time = "34"; /* us */
        max_exp_time = "550385"; /* us */
        step_exp_time = "1";
      };

      ports {
        #address-cells = <1>;
        #size-cells = <0>;
        port@0 {
          reg = <0>;
          avt_csi2_out1: endpoint {
            port-index = <4>;
            bus-width = <4>;
            remote-endpoint = <&avt_csi2_csi_in1>;
          };
        };
      };
    };
  };

	tcp: tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		* max_pixel_rate = <>;
		* Max pixel rate in Kpixel/s for the ISP ISO case
		*
		* isp_peak_byte_per_pixel = <>;
		* Max byte per pixel for the ISP ISO case
		*
		* isp_bw_margin_pct = <>;
		* Isp bandwidth margin in percentage
		*/
		num_csi_lanes = <10>;
		max_lane_speed = <1500000>;
		min_bits_per_pixel = <10>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <25>;
		max_pixel_rate = <240000>;
		isp_peak_byte_per_pixel = <5>;
		isp_bw_margin_pct = <25>;

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. "rear" or "front".
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vendor.
		 */
		modules {
			cam_module0: module0 {
				badge = "jakku_front_RBP194";
				position = "front";
				orientation = "1";
				cam_module0_drivernode0: drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "imx219 9-0010";
					proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@0/rbpcv2_imx219_a@10";
				};
			};
			cam_module1: module1 {
				badge = "jakku_rear_RBP194";
				position = "rear";
				orientation = "1";
				cam_module1_drivernode0: drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "imx219 10-0010";
					proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@1/rbpcv2_imx219_c@10";
				};
			};
		};
	};
};

